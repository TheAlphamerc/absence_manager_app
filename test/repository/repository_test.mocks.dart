// Mocks generated by Mockito 5.4.5 from annotations
// in absence_manager_app/test/repository/repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:api/src/api.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i2.Api {
  @override
  bool get usedForTesting =>
      (super.noSuchMethod(
            Invocation.getter(#usedForTesting),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i3.Future<List<dynamic>> readJsonFile(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#readJsonFile, [path]),
            returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i3.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<List<dynamic>> absences() =>
      (super.noSuchMethod(
            Invocation.method(#absences, []),
            returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i3.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<List<dynamic>> members() =>
      (super.noSuchMethod(
            Invocation.method(#members, []),
            returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i3.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i3.Future<List<dynamic>>);
}
